{{- if .Values.fluentbit.enabled }}
{{- $envAll := . }}

{{ range .Values.fluentbit.outputs.es }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "fluentbit-operator.operator.es-secret" .name }}
  namespace: {{ $envAll.Release.Namespace }}
type: Opaque
data:
  username: {{ .dedicatedUser.username | b64enc }}
  password: {{ .dedicatedUser.password | b64enc }}
# outputs for elasticsearch
  {{- $es := . -}}
  {{- range $i, $log := $envAll.Values.fluentbit.targetLogs }}
    {{- if and (not $log.do_not_store_as_default) (eq .es_name $es.name) }}
      {{- tuple  $envAll $es $log.type $log.index $log.tag | include "fluentbit-operator.fluentbit.output.es" }}
    {{- end }}
    {{- range $j, $multi := $log.multi_index }}
      {{- if  eq .es_name $es.name  }}
        {{- $newTag := tuple "seperate" $log $j | include "fluentbit-operator.fluentbit.newTag" }}
        {{- tuple  $envAll $es $log.type .index $newTag .index | include "fluentbit-operator.fluentbit.output.es" }}
      {{- end }}
    {{- end }}
  {{- end }}
{{- end }}

{{ range .Values.fluentbit.outputs.loki }}
  {{- $loki := . }}
# outputs for loki
  {{- range $i, $log := $envAll.Values.fluentbit.targetLogs }}
    {{- if and (not $log.do_not_store_as_default) (eq .loki_name $loki.name) }}
      {{- tuple  $envAll $loki $log.type $log.index $log.tag | include "fluentbit-operator.fluentbit.output.loki" }}
    {{- end }}
    {{- range $j, $multi := $log.multi_index }}
      {{- if eq $multi.loki_name $loki.name }}
        {{- $newTag := tuple "seperate" $log $j | include "fluentbit-operator.fluentbit.newTag" }}
        {{- tuple $envAll $loki $log.type $multi.index $newTag | include "fluentbit-operator.fluentbit.output.loki" }}
      {{- end}}
    {{- end}}
  {{- end}}
{{- end }}

{{- if and $envAll.Values.fluentbit.outputs.http.enabled }}
---
# regex-based log exporter
apiVersion: logging.kubesphere.io/v1alpha2
kind: Output
metadata:
  name: {{ template "fluentbit-operator.fullname" $envAll }}-exporter
  namespace: {{ $.Release.Namespace }}
  labels:
    logging.kubesphere.io/enabled: "true"
    app.kubernetes.io/version: v0.0.1
spec:
  match: "m_*"
  http:
    host: {{ template "fluentbit-operator.name" $envAll  }}-exporter.{{ $envAll.Release.Namespace }}.svc
    port: 2112
    uri: "/logs"
    format: json
{{- end }}
{{- if $envAll.Values.fluentbit.outputs.kafka.enabled }}
---
# kafka support
apiVersion: logging.kubesphere.io/v1alpha2
kind: Output
metadata:
  name: {{ template "fluentbit-operator.fullname" $envAll  }}-kafka
  namespace: {{ $.Release.Namespace }}
  labels:
    logging.kubesphere.io/enabled: "true"
    app.kubernetes.io/version: v0.0.1
spec:
  match: "kube*"
  kafka:
    brokers: {{ $envAll.Values.fluentbit.outputs.kafka.broker }}
    topics: {{ $envAll.Values.fluentbit.outputs.kafka.topic }}
    format: json
{{- end }}
{{- end }}
