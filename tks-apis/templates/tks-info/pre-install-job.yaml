apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "tks-info.fullname" . }}
  namespace: {{ .Values.namespace }}
  labels:
    {{- include "tks-info.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": pre-install
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": before-hook-creation
spec:
  template:
    metadata:
      name: {{ include "tks-info.fullname" . }}
    spec:
      restartPolicy: Never
      containers:
      - name: pre-install-job
        image: "bitnami/postgresql:11.12.0-debian-10-r44"
        env:
        - name: DB_ADMIN_USER
          value: {{ .Values.tksinfo.db.adminUser }}
        - name: PGPASSWORD
          value: {{ .Values.tksinfo.db.adminPassword }}
        - name: DB_NAME
          value: {{ .Values.tksinfo.db.dbName }}
        - name: DB_USER
          value: {{ .Values.tksinfo.args.dbUser }}
        - name: DB_PASSWORD
          value: {{ .Values.tksinfo.args.dbPassword }}
        - name: DB_URL
          value: {{ .Values.tksinfo.args.dbUrl }}
        - name: DB_PORT
          value: "{{ .Values.tksinfo.args.dbPort }}"
        command:
        - /bin/bash
        - -c
        - -x
        - |
          # check if ${DB_NAME} database already exists.
          psql -h ${DB_URL} -p ${DB_PORT} -U ${DB_ADMIN_USER} -lqt | cut -d \| -f 1 | grep -qw ${DB_NAME}
          if [[ $? -ne 0 ]]; then
            psql -h ${DB_URL} -p ${DB_PORT} -U ${DB_ADMIN_USER} -c "CREATE DATABASE ${DB_NAME};"
          fi

          # check if ${DB_USER} user already exists.
          psql -h ${DB_URL} -p ${DB_PORT} -U ${DB_ADMIN_USER} -tc '\du' | cut -d \| -f 1 | grep -qw ${DB_USER}
          if [[ $? -ne 0 ]]; then
            psql -h ${DB_URL} -p ${DB_PORT} -U ${DB_ADMIN_USER} -c "create user ${DB_USER} SUPERUSER password '${DB_PASSWORD}';"
          fi

          # check if contracts table in tks database already exists.
          psql -h ${DB_URL} -p ${DB_PORT} -U ${DB_ADMIN_USER} -d ${DB_NAME} -tc '\dt' | cut -d \| -f 2 | grep -qw csp_infos
          if [[ $? -ne 0 ]]; then
            echo """
              \c ${DB_NAME};
              CREATE TABLE csp_infos
              (
                id uuid primary key,
                contract_id character varying(10) COLLATE pg_catalog."default",
                name character varying(50) COLLATE pg_catalog."default",
                auth character varying(200) COLLATE pg_catalog."default",
                csp_type integer,
                updated_at timestamp with time zone,
                created_at timestamp with time zone

              );
              CREATE TABLE clusters
              (
                id character varying(10) COLLATE pg_catalog."default" primary key,
                name character varying(50) COLLATE pg_catalog."default",
                contract_id character varying(10) COLLATE pg_catalog."default",
                csp_id uuid,
                workflow_id character varying(100) COLLATE pg_catalog."default",
                status bigint,
                status_desc character varying(10000) COLLATE pg_catalog."default",
                ssh_key_name character varying(50) COLLATE pg_catalog."default",
                region character varying(50) COLLATE pg_catalog."default",
                num_of_az integer,
                machine_type character varying(50) COLLATE pg_catalog."default",
                min_size_per_az integer,
                max_size_per_az integer,
                kubeconfig character varying(1000) COLLATE pg_catalog."default",
                creator uuid,
                description character varying(100) COLLATE pg_catalog."default",
                updated_at timestamp with time zone,
                created_at timestamp with time zone

              );
              CREATE TABLE application_groups
              (
                name character varying(50) COLLATE pg_catalog."default",
                id character varying(10) COLLATE pg_catalog."default" primary key,
                type bigint,
                workflow_id character varying(100) COLLATE pg_catalog."default",
                status integer,
                status_desc character varying(10000) COLLATE pg_catalog."default",
                cluster_id character varying(10) COLLATE pg_catalog."default",
                external_label character varying(50) COLLATE pg_catalog."default",
                creator uuid,
                description character varying(100) COLLATE pg_catalog."default",
                updated_at timestamp with time zone,
                created_at timestamp with time zone
              );
              CREATE TABLE applications
              (
                id uuid primary key,
                type bigint,
                app_group_id character varying(10) COLLATE pg_catalog."default",
                endpoint character varying(200) COLLATE pg_catalog."default",
                metadata json,
                updated_at timestamp with time zone,
                created_at timestamp with time zone
              );
              CREATE TABLE keycloak_infos
              (
                id uuid primary key,
                cluster_id character varying(10) COLLATE pg_catalog."default",
                realm character varying(100) COLLATE pg_catalog."default",
                client_id character varying(100) COLLATE pg_catalog."default",
                secret character varying(1000) COLLATE pg_catalog."default",
                private_key character varying(1000) COLLATE pg_catalog."default",
                updated_at timestamp with time zone,
                created_at timestamp with time zone,
                CONSTRAINT keycloak_infos_ukey UNIQUE (cluster_id, realm, secret)
              );
              CREATE TABLE app_serve_apps
              (
                  id uuid primary key,
                  name character varying(50) COLLATE pg_catalog."default",
                  contract_id character varying(10) COLLATE pg_catalog."default",
                  version character varying(20) COLLATE pg_catalog."default",
                  task_type character varying(10) COLLATE pg_catalog."default",
                  status character varying(20) COLLATE pg_catalog."default",
                  output character varying(10000) COLLATE pg_catalog."default",
                  artifact_url character varying(50) COLLATE pg_catalog."default",
                  image_url character varying(50) COLLATE pg_catalog."default",
                  endpoint_url character varying(50) COLLATE pg_catalog."default",
                  target_cluster_id character varying(10) COLLATE pg_catalog."default",
                  profile character varying(10) COLLATE pg_catalog."default",
                  updated_at timestamp with time zone,
                  created_at timestamp with time zone
              );
              
            """ | psql -h ${DB_URL} -p ${DB_PORT} -U ${DB_ADMIN_USER}
          fi
