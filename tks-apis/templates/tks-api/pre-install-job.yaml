apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "tks-api.fullname" . }}
  namespace: {{ .Values.namespace }}
  labels: 
    {{- include "tks-api.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": pre-install
    "helm.sh/hook-weight": "-5"
spec:
  template:
    metadata:
      name: {{ include "tks-api.fullname" . }}
      labels:
        sidecar.istio.io/inject: "false"
    spec:
      restartPolicy: Never
      containers:
        - name: pre-install-job
          image: "bitnami/postgresql:11.12.0-debian-10-r44"
          env:
            - name: DB_ADMIN_USER
              value: {{ .Values.db.adminUser }}
            - name: PGPASSWORD
              value: {{ .Values.db.adminPassword }}
            - name: DB_NAME
              value: {{ .Values.db.dbName }}
            - name: DB_USER
              value: {{ .Values.db.dbUser }}
            - name: DB_PASSWORD
              value: {{ .Values.db.dbPassword }}
            - name: DB_URL
              value: {{ .Values.db.dbHost }}
            - name: DB_PORT
              value: "{{ .Values.db.dbPort }}"
          command:
            - /bin/bash
            - -c
            - -x
            - |
              # check if ${DB_NAME} database already exists.
              psql -h ${DB_URL} -p ${DB_PORT} -U ${DB_ADMIN_USER} -lqt | cut -d \| -f 1 | grep -qw ${DB_NAME}
              if [[ $? -ne 0 ]]; then
                psql -h ${DB_URL} -p ${DB_PORT} -U ${DB_ADMIN_USER} -c "CREATE DATABASE ${DB_NAME};"
              fi

              # check if ${DB_USER} user already exists.
              psql -h ${DB_URL} -p ${DB_PORT} -U ${DB_ADMIN_USER} -tc '\du' | cut -d \| -f 1 | grep -qw ${DB_USER}
              if [[ $? -ne 0 ]]; then
                psql -h ${DB_URL} -p ${DB_PORT} -U ${DB_ADMIN_USER} -c "create user ${DB_USER} SUPERUSER password '${DB_PASSWORD}';"
              fi
