---
apiVersion: jaegertracing.io/v1
kind: Jaeger
metadata:
  name: jaeger-operator-jaeger
  namespace: {{ .Values.namespace }}
spec:
  strategy: {{ .Values.strategy }}
  sampling:
    options:
      default_strategy:
        type: probabilistic
        param: {{ .Values.sampling.param }}
  ingress:
    enabled: {{ .Values.ingress.enabled }}
  collector:
    image: {{ .Values.collector.image }}
    maxReplicas: {{ .Values.collector.maxReplicas }}
    resources:
      requests:
        cpu: {{ .Values.collector.resources.requests.cpu }}
        memory: {{ .Values.collector.resources.requests.memory }}
      limits:
        cpu: {{ .Values.collector.resources.limits.cpu }}
        memory: {{ .Values.collector.resources.limits.memory }}
    {{- with .Values.collector.affinity }}
    affinity:
      {{- toYaml . | nindent 6 }}
    {{- end }}
  storage:
    type: {{ .Values.storage.type }}
  {{- if eq "elasticsearch" .Values.storage.type }}
    esIndexCleaner:
      enabled: {{ .Values.storage.elastic.esIndexCleaner.enabled }}
      {{- if .Values.storage.elastic.esIndexCleaner.enabled }}
      image: {{ .Values.storage.elastic.esIndexCleaner.image }}
      numberOfDays: {{ .Values.storage.elastic.esIndexCleaner.numberOfDays }}
      schedule: "{{ .Values.storage.elastic.esIndexCleaner.schedule }}"
      {{- end }}
    options:
      es:
        index-prefix: {{ .Values.storage.elastic.options.indexPrefix }}
        username: {{ .Values.storage.elastic.options.username }}
        password: {{ .Values.storage.elastic.options.password }}
        tls.ca: {{ .Values.storage.elastic.options.tlsCa }}
        server-urls: {{ .Values.storage.elastic.options.serverUrls }}
  {{- end }}
  {{- if eq "cassandra" .Values.storage.type }}
    options:
      cassandra:
        servers: {{ .Values.storage.cassandra.options.servers }}
        username: {{ .Values.cassandra.user.username }}
        password: {{ .Values.cassandra.user.password }}
        keyspace: {{ .Values.storage.cassandra.options.keyspace }}
    cassandraCreateSchema:
      image: {{ .Values.storage.cassandra.cassandraCreateSchema.image }}
      datacenter: {{ .Values.storage.cassandra.cassandraCreateSchema.datacenter }}
      mode: {{ .Values.storage.cassandra.cassandraCreateSchema.mode }}
      timeout: {{ .Values.storage.cassandra.cassandraCreateSchema.timeout }}
    dependencies:
      enabled: {{ .Values.storage.cassandra.dependencies.enabled }}
      image: {{ .Values.storage.cassandra.dependencies.image }}
  {{- end }}
  query:
    image: {{ .Values.query.image }}
  {{- if .Values.query.basePath }}
    options:
      query.base-path: {{ .Values.query.basePath }}
  {{- end }}
  {{- with .Values.query.affinity }}
    affinity:
      {{- toYaml . | nindent 6 }}
  {{- end }}
  agent:
    image: {{ .Values.agent.image }}
  {{- if eq "elasticsearch" .Values.storage.type }}
  volumeMounts:
  - mountPath: /etc/ssl/certs
    name: es-tls
  volumes:
  - name: es-tls
    secret:
      secretName: {{ .Values.storage.options.es.secretName }}
  {{- end }}
